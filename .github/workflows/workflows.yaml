name: Demo App Pipeline

on:
  push:
    branches: [ master ]
  pull_request:

jobs:
  lint:
    runs-on: ubuntu-22.04
    steps:
      - name: Checkout code
        uses: actions/checkout@v4

      - name: Setup Python
        uses: actions/setup-python@v5
        with:
          python-version: 3.9

      - name: Cache pip dependencies
        uses: actions/cache@v3
        with:
          path: ~/.cache/pip
          key: ${{ runner.os }}-pip-${{ hashFiles('setup.py') }}
          restore-keys: |
            ${{ runner.os }}-pip-

      - name: Install dependencies
        run: |
          python -m pip install --upgrade pip
          pip install .
          pip install flake8 black

      - name: Run Black to auto-format code
        run: black .

      - name: Run Flake8
        run: flake8 --ignore=F401 .

  test:
    runs-on: ubuntu-22.04
    steps:
      - uses: actions/checkout@v4

      - name: Use Python version 3.9
        uses: actions/setup-python@v5
        with:
          python-version: 3.9

      - name: Cache pip dependencies
        uses: actions/cache@v3
        with:
          path: ~/.cache/pip
          key: ${{ runner.os }}-pip-${{ hashFiles('setup.py') }}
          restore-keys: |
            ${{ runner.os }}-pip-

      - name: Install dependencies
        run: |
          python -m pip install --upgrade pip
          pip install flask
          pip install pytest

      - name: Set PYTHONPATH
        run: echo "PYTHONPATH=." >> $GITHUB_ENV

      - name: Run tests
        run: pytest

  build-and-push:
    runs-on: ubuntu-22.04

    needs: test

    permissions:
      id-token: write
      contents: read

    env:
      AWS_REGION: eu-west-1
      AWS_ROLE_ARN: arn:aws:iam::680739295215:role/gha-ci-role

    steps:
      - name: Checkout code
        uses: actions/checkout@v4

      - name: Setup Docker buildx
        uses: docker/setup-buildx-action@v3

      - name: Configure AWS credentials from OIDC
        id: configure-aws-credentials
        uses: aws-actions/configure-aws-credentials@v4
        with:
          role-to-assume: ${{ env.AWS_ROLE_ARN }}
          aws-region: ${{ env.AWS_REGION }}

      - name: Get Git SHA and set environment variable
        run: echo "COMMIT_ID=${GITHUB_SHA::7}" >> $GITHUB_ENV

      - name: Login to ECR
        run: |
          aws ecr get-login-password --region ${{ env.AWS_REGION }} | docker login --username AWS --password-stdin 680739295215.dkr.ecr.eu-west-1.amazonaws.com

      - name: Build Docker image
        uses: docker/build-push-action@v5
        with:
          push: true
          tags: demo-app:${{ env.COMMIT_ID}}
          file: Dockerfile


